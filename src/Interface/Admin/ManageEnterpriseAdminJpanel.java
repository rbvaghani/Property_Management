/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Admin;

import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.Role.GovernmentEnterpriseRole;
import Business.Role.MarketEnterpriseRole;
import Business.Role.SecurityEnterpriseRole;
import Business.Role.SocietyEnterpriseRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ramvaghani
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseAdminJPanel
     */
    
    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount account;
    Ecosystem business;
    Organisation organisation;
    
    ManageEnterpriseAdminJPanel(JPanel userProcessContainer, UserAccount account, Organisation organisation, Enterprise enterprise, Ecosystem business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.business=business;
        this.enterprise=enterprise;
        this.organisation= organisation;
        
        populateTable();
        populateNetworkComboBox();
    }
    
     private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : business.getNetworkDirectory()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDir().getUserAccountDirectory()) {
                    Object[] row = new Object[4];
                    row[0] = enterprise.getEnterpriseType();
                    row[1] = network.getName();
                    row[2] = userAccount.getUserName();
                    row[3]= userAccount.getPassword();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        networkcmboBox.removeAllItems();

        for (Network network : business.getNetworkDirectory()) {
            networkcmboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        EntrpriseCmbobox.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            EntrpriseCmbobox.addItem(enterprise);
        }

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        networkcmboBox = new javax.swing.JComboBox();
        EntrpriseCmbobox = new javax.swing.JComboBox();
        usernameJTextField = new javax.swing.JTextField();
        passwordJPasswordField = new javax.swing.JPasswordField();
        nameJTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 53, 674, 488));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Manage Enterprise Admin");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Type", "Network", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 58, 523, 95));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 150, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 150, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("UserID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 150, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 150, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 150, -1));

        networkcmboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkcmboBoxActionPerformed(evt);
            }
        });
        add(networkcmboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 136, -1));

        EntrpriseCmbobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntrpriseCmboboxActionPerformed(evt);
            }
        });
        add(EntrpriseCmbobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 136, -1));
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 136, -1));
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 134, -1));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 136, -1));

        submitJButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        backJButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, -1, -1));
    }// </editor-fold>                        

    private void networkcmboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                               

        Network network = (Network) networkcmboBox.getSelectedItem();
        if (network != null) 
        {
            populateEnterpriseComboBox(network);
        }
        
    }                                              

    private void EntrpriseCmboboxActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              

        try {
            Enterprise enterprise = (Enterprise) EntrpriseCmbobox.getSelectedItem();

            String username = usernameJTextField.getText();
            String password = String.valueOf(passwordJPasswordField.getPassword());
            String name = nameJTextField.getText();

            if (username.equals("") || password.equals("") || name.equals("")) {
                JOptionPane.showMessageDialog(null, "All fields nedd to be entered.", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
 
        }

            Employee employee = enterprise.getEmpList().createEmployee(name,null);
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Government) 
            {
                if (business.checkIfUsernameIsUnique(username)) {
                    UserAccount account = enterprise.getUserAccountDir().addUserAccount(username, password, employee, new GovernmentEnterpriseRole());
                    usernameJTextField.setText("");
                    passwordJPasswordField.setText("");
                    nameJTextField.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "User name already exist");
                }
            } 
            else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Market) {
                if (business.checkIfUsernameIsUnique(username)) {
                    UserAccount account = enterprise.getUserAccountDir().addUserAccount(username, password, employee, new MarketEnterpriseRole());
                    usernameJTextField.setText("");
                    passwordJPasswordField.setText("");
                    nameJTextField.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "User name already exist");
                }
            }
            else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Security) {
                if (business.checkIfUsernameIsUnique(username)) {
                    UserAccount account = enterprise.getUserAccountDir().addUserAccount(username, password, employee, new SecurityEnterpriseRole());
                    usernameJTextField.setText("");
                    passwordJPasswordField.setText("");
                    nameJTextField.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "User name already exist");
                }
            }
            else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Society) {
                if (business.checkIfUsernameIsUnique(username)) {
                    UserAccount account = enterprise.getUserAccountDir().addUserAccount(username, password, employee, new SocietyEnterpriseRole());
                    usernameJTextField.setText("");
                    passwordJPasswordField.setText("");
                    nameJTextField.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "User name already exist");
                }
            }
            populateTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No Enterprise");
        }

    }                                             

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        //SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }                                           


    // Variables declaration - do not modify                     
    private javax.swing.JComboBox EntrpriseCmbobox;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkcmboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration                   
}

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
