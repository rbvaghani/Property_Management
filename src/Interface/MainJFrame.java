/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Customer.Customer;
import Business.DB4OUtil.DB4OUtil;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ramvaghani
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private Ecosystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    public MainJFrame() {
        initComponents();
        system = dB4OUtil.retrieveSystem();
        logoutJBTN.setEnabled(false);
        loginBackground();

    }

    public void loginBackground() {
        userProcessContainer.removeAll();

        JPanel blankJPanel = new JPanel();
        JLabel imageLabel = new JLabel();
        String imageTxt = "/Users/ajaygoel/Desktop/IoT_Illustration-680x390.png";
        String imageTxt1="/Users/ramvaghani/Downloads/IOT_Smart_Home/src/Pics/IoT_Illustration-680x390.png";

           BufferedImage img = null ;
        try {
         img= ImageIO.read(new File(imageTxt));

  
        } catch (IOException e) {
            try {
                img= ImageIO.read(new File(imageTxt1));
            } catch (IOException ex) {
                Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                  imageLabel.setBounds(100, 100, 900, 900);

            Image dimg = img.getScaledInstance(imageLabel.getWidth(), imageLabel.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(dimg);

            imageLabel.setIcon(icon);

//imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/IoT_Illustration-680x390.png"))); // NOI18N
        //  userProcessContainer.add(jLabel4, "card2");
        blankJPanel.add(imageLabel);
        blankJPanel.setOpaque(true);
        blankJPanel.setBackground(Color.WHITE);
        userProcessContainer.add("blankJPanel", blankJPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        SplitPanel = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userNameJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        loginJButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        signUpJBtn = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        logoutJBTN = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SplitPanel.setDividerLocation(250);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Username:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Password:");

        loginJButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        loginJButton.setText("Log In>>");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Welcome, Login:");

        signUpJBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        signUpJBtn.setText("Sign up Customer");
        signUpJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpJBtnActionPerformed(evt);
            }
        });

        logoutJBTN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        logoutJBTN.setText("<< Log Out");
        logoutJBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signUpJBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordField)
                            .addComponent(userNameJTextField)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(logoutJBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logoutJBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signUpJBtn)
                .addContainerGap(524, Short.MAX_VALUE))
        );

        SplitPanel.setLeftComponent(jPanel1);

        userProcessContainer.setBackground(new java.awt.Color(255, 255, 255));
        userProcessContainer.setPreferredSize(new java.awt.Dimension(400, 400));
        userProcessContainer.setLayout(new java.awt.CardLayout());
        SplitPanel.setRightComponent(userProcessContainer);

        getContentPane().add(SplitPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>                        

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:

        String userName = userNameJTextField.getText();
        // Get Password
        char[] passwordCharArray = passwordField.getPassword();
        String password = String.valueOf(passwordCharArray);
        Ecosystem business = Ecosystem.getInstance();

        //Step1: Check in the system admin user account directory if you have the user
        UserAccount userAccount = system.getUserAccountDir().authenticateUser(userName, password);

        Enterprise inEnterprise = null;
        Organisation inOrganization = null;
        boolean flag = true;

        if (userAccount != null) {
            for (Network network : system.getNetworkDirectory()) {
                System.out.println("in cu1");
                for (Customer c : network.getCustomerDirectory().getCustList()) {
                    System.out.println("in cu2");
                    if (c.getUserAcc().getUserName().equals(userName)) {
                        System.out.println("in cu3");
                        Interface.Customer.CustomerWAJPanel iccswajp = new Interface.Customer.CustomerWAJPanel(userProcessContainer, system, userAccount);
                        userProcessContainer.add("Interface.CustomerWAJPanel", iccswajp);
                        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                        layout.next(userProcessContainer);
                        flag = false;
                        break;
                    }
                }
            }
        } else if (userAccount == null) {
            //Step 2: Go inside each network and check each enterprise
            for (Network network : system.getNetworkDirectory()) {
                System.out.println("checking1");
                //Step 2.a: check against each enterprise
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    System.out.println("checking2");
                    userAccount = enterprise.getUserAccountDir().authenticateUser(userName, password);
                    if (userAccount == null) {
                        //Step 3:check against each organization for each enterprise
                        for (Organisation organization : enterprise.getOrganisationDirectory().getOrganizationlist()) {
                            System.out.println("checking3");
                            userAccount = organization.getUserAccountDir().authenticateUser(userName, password);
                            if (userAccount != null) {
                                System.out.println("checking4");
                                inEnterprise = enterprise;
                                inOrganization = organization;
                                break;
                            }
                        }

                    } else {
                        inEnterprise = enterprise;
                        break;
                    }
                    if (inOrganization != null) {
                        System.out.println("org11");
                        break;
                    }
                }
                if (inEnterprise != null) {
                    break;
                }
            }
        }

        if (userAccount == null) {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        } else {
            if (flag == true) {

                System.out.println("in if " + userAccount.getRole());
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("workArea", userAccount.getRole().createWorkArea(userProcessContainer, userAccount, inOrganization, inEnterprise, system));
                layout.next(userProcessContainer);
            }

        }

        loginJButton.setEnabled(false);
        logoutJBTN.setEnabled(true);
        signUpJBtn.setEnabled(false);
        userNameJTextField.setEnabled(false);
        passwordField.setEnabled(false);
    }

    private void logoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {


    }                                            

    private void signUpJBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:

        Interface.Customer.signUpJFrame icsuf = new Interface.Customer.signUpJFrame(userProcessContainer, system);
        userProcessContainer.add("signUpJFrame", icsuf);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }                                          

    private void logoutJBTNActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        logoutJBTN.setEnabled(false);
        userNameJTextField.setEnabled(true);
        passwordField.setEnabled(true);
        signUpJBtn.setEnabled(true);
        loginJButton.setEnabled(true);
        userNameJTextField.setText("");
        passwordField.setText("");

        userProcessContainer.removeAll();

        loginBackground();

        CardLayout crdLyt = (CardLayout) userProcessContainer.getLayout();
        crdLyt.next(userProcessContainer);
        dB4OUtil.storeSystem(system);
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JSplitPane SplitPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginJButton;
    private javax.swing.JButton logoutJBTN;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton signUpJBtn;
    private javax.swing.JTextField userNameJTextField;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration                   
}

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
