/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Water;

import Business.Customer.Customer;
import Business.Ecosystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.Organisation.WaterOrganisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WaterWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ramvaghani
 */
public class ManageWaterRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageWaterRequestJPanel
     */
    
    JPanel userProcessContainer;
    UserAccount account;
    Organisation organization;
    Enterprise enterprise;
    Ecosystem business;
    Customer customer;
    WaterOrganisation waterOrganisation;
    int charge=5;
    
    ManageWaterRequestJPanel(JPanel userProcessContainer,Enterprise enterprise,Ecosystem business,UserAccount account) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;   
        this.organization=organization;
        this.enterprise=enterprise;
        this.business=business;
        
        chargeTextField.setText(String.valueOf(charge));
        
        for(Network n:business.getNetworkDirectory())
        {
            for(Enterprise enterprise1 :n.getEnterpriseDirectory().getEnterpriseList())
            {
                for(Organisation org:enterprise1.getOrganisationDirectory().getOrganizationlist())
                {
                    if (org instanceof WaterOrganisation)
            
                    {   
                            waterOrganisation=(WaterOrganisation) org;
                            break;
                    }
                }
            }
        }
        populateTable();
    }
    
    private void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) receReqJTbl.getModel();
        dtm.setRowCount(0);
        
        for (Iterator<WorkRequest> it = waterOrganisation.getWorkQueue().getReqList().iterator(); it.hasNext();) 
        {
            WaterWorkRequest wr = (WaterWorkRequest) it.next();
            {
                Object Row[] = new Object[5];
                Row[0] = wr.getCust();
                Row[1] = wr.getRequestDate();
                Row[2] = wr.getMessage();
                Row[3] = wr;
                Row[4] = wr.getReqCharges();

                dtm.addRow(Row);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BackJBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        receReqJTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        chargeTextField = new javax.swing.JTextField();
        closeBillButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Water Requests");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(296, 11, -1, -1));

        BackJBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        BackJBtn.setText("<< Back");
        BackJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackJBtnActionPerformed(evt);
            }
        });
        add(BackJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 263, -1, -1));

        receReqJTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Detail", "Request Date", "Request Message", "Status", "Total Charges"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(receReqJTbl);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 70, 709, 97));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Per Unit Charge");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 185, -1, 24));

        chargeTextField.setEnabled(false);
        chargeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeTextFieldActionPerformed(evt);
            }
        });
        add(chargeTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 66, -1));

        closeBillButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        closeBillButton.setText("Close Bill");
        closeBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBillButtonActionPerformed(evt);
            }
        });
        add(closeBillButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(673, 186, -1, -1));
    }// </editor-fold>                        

    private void BackJBtnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }                                        

    private void chargeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:

    }                                               

    private void closeBillButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        int row = receReqJTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        WaterWorkRequest wr= (WaterWorkRequest)receReqJTbl.getValueAt(row, 3);
        Customer customer =(Customer) receReqJTbl.getValueAt(row, 0);
        if (wr.getStatus().equals("CLOSED")) {
            JOptionPane.showMessageDialog(null, "This request has already been closed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        wr.setStatus("CLOSED");
        wr.setMessage("The water request have been successfully closed. Please contact water admin for any issue.");
        Date resolveDate= new Date();
        wr.setResolveDate(resolveDate);
        wr.setReceiver(account);
        
        double cost;
            cost=charge*wr.getCust().getWater().getWaterDays();

        customer.getWater().setWaterDays(0);
        wr.setReqCharges(cost);

        wr.getCust().debitMoney(wr, cost);
        wr.getCust().getNotification().addNotification(wr); 
        JOptionPane.showMessageDialog(null, "The request has been completed", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        populateTable();
        

        
    }                                               


    // Variables declaration - do not modify                     
    private javax.swing.JButton BackJBtn;
    private javax.swing.JTextField chargeTextField;
    private javax.swing.JButton closeBillButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable receReqJTbl;
    // End of variables declaration                   
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
